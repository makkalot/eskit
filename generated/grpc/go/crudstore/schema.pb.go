// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crudstore/schema.proto

package crudstore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SchemaSpec struct {
	// optional field that keeps the version of the schema for that object
	// field can be used to make sure the client are sending objects against
	// the latest version of the schema registered in the system
	SchemaVersion uint64 `protobuf:"varint,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// optional field that is used for validating the entity for certain
	// schema version. If empty no validation is done, if supplied the submitted
	// object is validated against the schema
	JsonSchema           string   `protobuf:"bytes,2,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchemaSpec) Reset()         { *m = SchemaSpec{} }
func (m *SchemaSpec) String() string { return proto.CompactTextString(m) }
func (*SchemaSpec) ProtoMessage()    {}
func (*SchemaSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_a983406524329236, []int{0}
}

func (m *SchemaSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaSpec.Unmarshal(m, b)
}
func (m *SchemaSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaSpec.Marshal(b, m, deterministic)
}
func (m *SchemaSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaSpec.Merge(m, src)
}
func (m *SchemaSpec) XXX_Size() int {
	return xxx_messageInfo_SchemaSpec.Size(m)
}
func (m *SchemaSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaSpec proto.InternalMessageInfo

func (m *SchemaSpec) GetSchemaVersion() uint64 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *SchemaSpec) GetJsonSchema() string {
	if m != nil {
		return m.JsonSchema
	}
	return ""
}

type CrudEntitySpec struct {
	// the entity type we're registering like Project, User and etc
	// if have same entity on different bounded contexes can use packages
	// like com.makkalot.User, this field is required
	EntityType           string      `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	SchemaSpec           *SchemaSpec `protobuf:"bytes,2,opt,name=schema_spec,json=schemaSpec,proto3" json:"schema_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CrudEntitySpec) Reset()         { *m = CrudEntitySpec{} }
func (m *CrudEntitySpec) String() string { return proto.CompactTextString(m) }
func (*CrudEntitySpec) ProtoMessage()    {}
func (*CrudEntitySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_a983406524329236, []int{1}
}

func (m *CrudEntitySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrudEntitySpec.Unmarshal(m, b)
}
func (m *CrudEntitySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrudEntitySpec.Marshal(b, m, deterministic)
}
func (m *CrudEntitySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrudEntitySpec.Merge(m, src)
}
func (m *CrudEntitySpec) XXX_Size() int {
	return xxx_messageInfo_CrudEntitySpec.Size(m)
}
func (m *CrudEntitySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CrudEntitySpec.DiscardUnknown(m)
}

var xxx_messageInfo_CrudEntitySpec proto.InternalMessageInfo

func (m *CrudEntitySpec) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *CrudEntitySpec) GetSchemaSpec() *SchemaSpec {
	if m != nil {
		return m.SchemaSpec
	}
	return nil
}

func init() {
	proto.RegisterType((*SchemaSpec)(nil), "contracts.crudstore.SchemaSpec")
	proto.RegisterType((*CrudEntitySpec)(nil), "contracts.crudstore.CrudEntitySpec")
}

func init() { proto.RegisterFile("crudstore/schema.proto", fileDescriptor_a983406524329236) }

var fileDescriptor_a983406524329236 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xa9, 0x88, 0xb0, 0x53, 0xdc, 0x43, 0x05, 0xd9, 0x5b, 0x97, 0x05, 0x61, 0x4f, 0x09,
	0x28, 0xe2, 0x55, 0x14, 0x5f, 0xa0, 0xbb, 0x78, 0xf0, 0x52, 0xb2, 0xe9, 0xd0, 0xd6, 0xda, 0x4c,
	0xc8, 0x4c, 0x85, 0xbe, 0xbd, 0x98, 0x48, 0xbd, 0xec, 0x2d, 0xf9, 0xf8, 0xe7, 0x9b, 0x9f, 0x81,
	0x5b, 0x1b, 0xa6, 0x86, 0x85, 0x02, 0x6a, 0xb6, 0x1d, 0x8e, 0x46, 0xf9, 0x40, 0x42, 0xc5, 0x8d,
	0x25, 0x27, 0xc1, 0x58, 0x61, 0xb5, 0x24, 0x76, 0x47, 0x80, 0x43, 0x0c, 0x1d, 0x3c, 0xda, 0xe2,
	0x0e, 0xd6, 0x69, 0xa4, 0xfe, 0xc6, 0xc0, 0x3d, 0xb9, 0x4d, 0xb6, 0xcd, 0xf6, 0x97, 0xd5, 0x75,
	0xa2, 0xef, 0x09, 0x16, 0x25, 0xe4, 0x9f, 0x4c, 0xae, 0x4e, 0x74, 0x73, 0xb1, 0xcd, 0xf6, 0xab,
	0x0a, 0x7e, 0x51, 0x72, 0xed, 0x18, 0xd6, 0xaf, 0x61, 0x6a, 0xde, 0x9c, 0xf4, 0x32, 0x47, 0x73,
	0x09, 0x39, 0xc6, 0x5f, 0x2d, 0xb3, 0xc7, 0xa8, 0x5d, 0x55, 0x90, 0xd0, 0x71, 0xf6, 0x58, 0x3c,
	0x43, 0xfe, 0xb7, 0x9a, 0x3d, 0xda, 0xe8, 0xcc, 0xef, 0x4b, 0x75, 0xa6, 0xb3, 0xfa, 0x2f, 0x5c,
	0x01, 0x2f, 0xef, 0x97, 0xa7, 0x8f, 0xc7, 0xb6, 0x97, 0x6e, 0x3a, 0x29, 0x4b, 0xa3, 0x1e, 0xcd,
	0x30, 0x98, 0x2f, 0x12, 0x8d, 0x3c, 0xf4, 0xa2, 0x5b, 0x74, 0x18, 0x8c, 0x60, 0xa3, 0xdb, 0xe0,
	0xad, 0x6e, 0x49, 0x2f, 0xbe, 0xd3, 0x55, 0xbc, 0xcf, 0xc3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x41, 0x1e, 0x04, 0x08, 0x39, 0x01, 0x00, 0x00,
}
