// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eventstore/service.proto

package eventstore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/makkalot/eskit/generated/grpc/go/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendEventRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEventRequest) Reset()         { *m = AppendEventRequest{} }
func (m *AppendEventRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEventRequest) ProtoMessage()    {}
func (*AppendEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{0}
}

func (m *AppendEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEventRequest.Unmarshal(m, b)
}
func (m *AppendEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEventRequest.Marshal(b, m, deterministic)
}
func (m *AppendEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEventRequest.Merge(m, src)
}
func (m *AppendEventRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEventRequest.Size(m)
}
func (m *AppendEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEventRequest proto.InternalMessageInfo

func (m *AppendEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type AppendEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEventResponse) Reset()         { *m = AppendEventResponse{} }
func (m *AppendEventResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEventResponse) ProtoMessage()    {}
func (*AppendEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{1}
}

func (m *AppendEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEventResponse.Unmarshal(m, b)
}
func (m *AppendEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEventResponse.Marshal(b, m, deterministic)
}
func (m *AppendEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEventResponse.Merge(m, src)
}
func (m *AppendEventResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEventResponse.Size(m)
}
func (m *AppendEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEventResponse proto.InternalMessageInfo

type GetEventsRequest struct {
	// The object this event belongs to if the version is omitted all of the events
	// are going to be fetched, if version is supplied all the events from that version
	// are going to returned back.
	Originator *common.Originator `protobuf:"bytes,1,opt,name=originator,proto3" json:"originator,omitempty"`
	// entity type like Users, Projects and etc
	EntityType           string   `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsRequest) Reset()         { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()    {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{2}
}

func (m *GetEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsRequest.Unmarshal(m, b)
}
func (m *GetEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsRequest.Merge(m, src)
}
func (m *GetEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsRequest.Size(m)
}
func (m *GetEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsRequest proto.InternalMessageInfo

func (m *GetEventsRequest) GetOriginator() *common.Originator {
	if m != nil {
		return m.Originator
	}
	return nil
}

func (m *GetEventsRequest) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

type GetEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsResponse) Reset()         { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()    {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{3}
}

func (m *GetEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsResponse.Unmarshal(m, b)
}
func (m *GetEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsResponse.Marshal(b, m, deterministic)
}
func (m *GetEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsResponse.Merge(m, src)
}
func (m *GetEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsResponse.Size(m)
}
func (m *GetEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsResponse proto.InternalMessageInfo

func (m *GetEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type AppLogRequest struct {
	// specifies the id from which to start the listing of the events
	// if not specified starts from the beginning
	FromId string `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	// number of events to get back if not specifies 20 is default
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// optional parameter to specify which events we're interested into
	// it can be specififed as eventType.* or specific event as well eventType.eventName
	Selector string `protobuf:"bytes,3,opt,name=selector,proto3" json:"selector,omitempty"`
	// this is in general the entity type
	PipelineId           string   `protobuf:"bytes,4,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppLogRequest) Reset()         { *m = AppLogRequest{} }
func (m *AppLogRequest) String() string { return proto.CompactTextString(m) }
func (*AppLogRequest) ProtoMessage()    {}
func (*AppLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{4}
}

func (m *AppLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppLogRequest.Unmarshal(m, b)
}
func (m *AppLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppLogRequest.Marshal(b, m, deterministic)
}
func (m *AppLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppLogRequest.Merge(m, src)
}
func (m *AppLogRequest) XXX_Size() int {
	return xxx_messageInfo_AppLogRequest.Size(m)
}
func (m *AppLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppLogRequest proto.InternalMessageInfo

func (m *AppLogRequest) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *AppLogRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *AppLogRequest) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *AppLogRequest) GetPipelineId() string {
	if m != nil {
		return m.PipelineId
	}
	return ""
}

type AppLogResponse struct {
	Results              []*AppLogEntry `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AppLogResponse) Reset()         { *m = AppLogResponse{} }
func (m *AppLogResponse) String() string { return proto.CompactTextString(m) }
func (*AppLogResponse) ProtoMessage()    {}
func (*AppLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{5}
}

func (m *AppLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppLogResponse.Unmarshal(m, b)
}
func (m *AppLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppLogResponse.Marshal(b, m, deterministic)
}
func (m *AppLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppLogResponse.Merge(m, src)
}
func (m *AppLogResponse) XXX_Size() int {
	return xxx_messageInfo_AppLogResponse.Size(m)
}
func (m *AppLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppLogResponse proto.InternalMessageInfo

func (m *AppLogResponse) GetResults() []*AppLogEntry {
	if m != nil {
		return m.Results
	}
	return nil
}

type AppLogConsumeEntry struct {
	Originator           *common.Originator `protobuf:"bytes,1,opt,name=originator,proto3" json:"originator,omitempty"`
	Offset               string             `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AppLogConsumeEntry) Reset()         { *m = AppLogConsumeEntry{} }
func (m *AppLogConsumeEntry) String() string { return proto.CompactTextString(m) }
func (*AppLogConsumeEntry) ProtoMessage()    {}
func (*AppLogConsumeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{6}
}

func (m *AppLogConsumeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppLogConsumeEntry.Unmarshal(m, b)
}
func (m *AppLogConsumeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppLogConsumeEntry.Marshal(b, m, deterministic)
}
func (m *AppLogConsumeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppLogConsumeEntry.Merge(m, src)
}
func (m *AppLogConsumeEntry) XXX_Size() int {
	return xxx_messageInfo_AppLogConsumeEntry.Size(m)
}
func (m *AppLogConsumeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_AppLogConsumeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_AppLogConsumeEntry proto.InternalMessageInfo

func (m *AppLogConsumeEntry) GetOriginator() *common.Originator {
	if m != nil {
		return m.Originator
	}
	return nil
}

func (m *AppLogConsumeEntry) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

type HealthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{7}
}

func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (m *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(m, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

type HealthResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95502aed4a17069e, []int{8}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AppendEventRequest)(nil), "contracts.eventstore.AppendEventRequest")
	proto.RegisterType((*AppendEventResponse)(nil), "contracts.eventstore.AppendEventResponse")
	proto.RegisterType((*GetEventsRequest)(nil), "contracts.eventstore.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "contracts.eventstore.GetEventsResponse")
	proto.RegisterType((*AppLogRequest)(nil), "contracts.eventstore.AppLogRequest")
	proto.RegisterType((*AppLogResponse)(nil), "contracts.eventstore.AppLogResponse")
	proto.RegisterType((*AppLogConsumeEntry)(nil), "contracts.eventstore.AppLogConsumeEntry")
	proto.RegisterType((*HealthRequest)(nil), "contracts.eventstore.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "contracts.eventstore.HealthResponse")
}

func init() { proto.RegisterFile("eventstore/service.proto", fileDescriptor_95502aed4a17069e) }

var fileDescriptor_95502aed4a17069e = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0x6e, 0xda, 0xfe, 0x6e, 0x3b, 0xfd, 0x5b, 0xe8, 0x02, 0x6d, 0x64, 0x2a, 0x11, 0x0c, 0x82,
	0xc0, 0x21, 0x4b, 0x5b, 0x09, 0x21, 0xc1, 0xa5, 0xa0, 0xa8, 0xad, 0x14, 0x04, 0x72, 0x11, 0x07,
	0x0e, 0x44, 0xae, 0x33, 0xd9, 0x2c, 0xb1, 0x77, 0xb7, 0xde, 0x4d, 0xa4, 0xf4, 0xc8, 0x2b, 0xf0,
	0x68, 0xbc, 0x02, 0x27, 0x9e, 0x02, 0xd9, 0x6b, 0x3b, 0x49, 0x95, 0x90, 0x4a, 0xdc, 0x3c, 0xb3,
	0xdf, 0x7c, 0x33, 0xdf, 0xec, 0xb7, 0x86, 0x2a, 0x0e, 0x51, 0x18, 0x6d, 0x64, 0x82, 0x54, 0x63,
	0x32, 0xe4, 0x21, 0x36, 0x54, 0x22, 0x8d, 0x24, 0x77, 0x43, 0x29, 0x4c, 0x12, 0x84, 0x46, 0x37,
	0xc6, 0x18, 0x77, 0x2f, 0x94, 0x71, 0x2c, 0x05, 0x95, 0x09, 0x67, 0x5c, 0x04, 0x46, 0x26, 0x16,
	0xee, 0xee, 0x4e, 0x10, 0x65, 0x9f, 0x79, 0x7e, 0x9f, 0x49, 0xc9, 0x22, 0xa4, 0x81, 0xe2, 0x34,
	0x10, 0x42, 0x9a, 0xc0, 0x70, 0x29, 0xb4, 0x3d, 0xf5, 0x4e, 0x80, 0x1c, 0x2b, 0x85, 0xa2, 0xd3,
	0x4c, 0x4b, 0x7c, 0xbc, 0x1c, 0xa0, 0x36, 0xe4, 0x00, 0xfe, 0xcb, 0x28, 0xaa, 0x95, 0x5a, 0xa5,
	0xbe, 0x79, 0x78, 0xbf, 0x31, 0x6b, 0x94, 0x86, 0x2d, 0xb1, 0x48, 0xef, 0x1e, 0xdc, 0x99, 0x22,
	0xd2, 0x4a, 0x0a, 0x8d, 0xde, 0x25, 0xdc, 0x3e, 0x41, 0x93, 0xe5, 0x74, 0xc1, 0xfe, 0x06, 0x60,
	0x3c, 0x7d, 0xde, 0x62, 0x7f, 0xa2, 0x85, 0x55, 0xd8, 0xf8, 0x50, 0x62, 0xfc, 0x09, 0x3c, 0x79,
	0x00, 0x9b, 0x28, 0x0c, 0x37, 0xa3, 0xb6, 0x19, 0x29, 0xac, 0x2e, 0xd7, 0x2a, 0xf5, 0x0d, 0x1f,
	0x6c, 0xea, 0xd3, 0x48, 0xa1, 0x77, 0x0a, 0x3b, 0x13, 0x2d, 0xed, 0x1c, 0xe4, 0x08, 0x1c, 0x3b,
	0x79, 0xb5, 0x52, 0x5b, 0x59, 0x24, 0x29, 0x87, 0x7a, 0x23, 0xd8, 0x3a, 0x56, 0xaa, 0x25, 0x59,
	0x31, 0xf9, 0x1e, 0xac, 0x75, 0x13, 0x19, 0xb7, 0x79, 0x27, 0x1b, 0x7b, 0xc3, 0x77, 0xd2, 0xf0,
	0xac, 0x43, 0x08, 0xac, 0x6a, 0x7e, 0x65, 0xa7, 0xd9, 0xf2, 0xb3, 0x6f, 0xe2, 0xc2, 0xba, 0xc6,
	0x08, 0xc3, 0x54, 0xe4, 0x4a, 0x86, 0x2e, 0xe3, 0x54, 0x84, 0xe2, 0x0a, 0x23, 0x2e, 0x30, 0x25,
	0x5b, 0xb5, 0x22, 0x8a, 0xd4, 0x59, 0xc7, 0x7b, 0x0f, 0xdb, 0x45, 0xeb, 0x5c, 0xc1, 0x6b, 0x58,
	0x4b, 0x50, 0x0f, 0xa2, 0x52, 0xc2, 0xc3, 0xd9, 0x12, 0x6c, 0x59, 0x53, 0x98, 0x64, 0xe4, 0x17,
	0x15, 0xde, 0xb7, 0xec, 0x9a, 0x5b, 0x92, 0xbd, 0x93, 0x42, 0x0f, 0x62, 0xcc, 0x8e, 0xff, 0xf1,
	0x22, 0x76, 0xc1, 0x91, 0xdd, 0xae, 0x46, 0x93, 0xdf, 0x41, 0x1e, 0x79, 0xb7, 0x60, 0xeb, 0x14,
	0x83, 0xc8, 0xf4, 0xf2, 0xad, 0x79, 0xcf, 0x61, 0xbb, 0x48, 0xe4, 0x5a, 0xaa, 0xb0, 0x16, 0xa3,
	0xd6, 0x01, 0xc3, 0x7c, 0x8f, 0x45, 0x78, 0xf8, 0x7b, 0x05, 0x76, 0x9a, 0xa5, 0x98, 0x73, 0xfb,
	0x20, 0x08, 0x03, 0x27, 0x63, 0xb8, 0x22, 0x8f, 0x66, 0x8b, 0x9e, 0x6a, 0xe8, 0x3e, 0xfe, 0x3b,
	0x28, 0xb7, 0x26, 0xf9, 0xfe, 0xf3, 0xd7, 0x8f, 0xe5, 0xff, 0x09, 0xd0, 0xe1, 0x01, 0xed, 0x59,
	0xfa, 0x36, 0x38, 0xd6, 0xc5, 0xa4, 0x3e, 0x77, 0xbb, 0xd7, 0x1e, 0x8b, 0xfb, 0xec, 0x06, 0xc8,
	0xbc, 0xe5, 0x12, 0xf9, 0x0a, 0x1b, 0xa5, 0x39, 0xc9, 0x93, 0xd9, 0x95, 0xd7, 0x1f, 0x8c, 0xfb,
	0x74, 0x21, 0xae, 0xe4, 0x3f, 0x87, 0xd5, 0x96, 0x64, 0x7a, 0xde, 0x9e, 0xa6, 0xec, 0x3c, 0x6f,
	0x4f, 0xd3, 0xc6, 0xf3, 0x96, 0xc8, 0x67, 0x58, 0x4f, 0x49, 0x3f, 0xca, 0x28, 0xba, 0x19, 0xf1,
	0x62, 0x6b, 0x7a, 0x4b, 0x2f, 0x2a, 0x6f, 0x5f, 0x7d, 0x79, 0xc9, 0xb8, 0xe9, 0x0d, 0x2e, 0x52,
	0xa7, 0xd1, 0x38, 0xe8, 0xf7, 0x83, 0x48, 0x1a, 0x8a, 0xba, 0xcf, 0x0d, 0x65, 0x28, 0x30, 0x09,
	0x0c, 0x76, 0x28, 0x4b, 0x54, 0x48, 0x99, 0xa4, 0x63, 0xa6, 0x0b, 0x27, 0xfb, 0x7b, 0x1d, 0xfd,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xb9, 0xa4, 0x8c, 0x3e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventstoreServiceClient is the client API for EventstoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventstoreServiceClient interface {
	Healtz(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
	Append(ctx context.Context, in *AppendEventRequest, opts ...grpc.CallOption) (*AppendEventResponse, error)
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error)
	Logs(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (*AppLogResponse, error)
	LogsPoll(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (EventstoreService_LogsPollClient, error)
}

type eventstoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventstoreServiceClient(cc *grpc.ClientConn) EventstoreServiceClient {
	return &eventstoreServiceClient{cc}
}

func (c *eventstoreServiceClient) Healtz(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/contracts.eventstore.EventstoreService/Healtz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventstoreServiceClient) Append(ctx context.Context, in *AppendEventRequest, opts ...grpc.CallOption) (*AppendEventResponse, error) {
	out := new(AppendEventResponse)
	err := c.cc.Invoke(ctx, "/contracts.eventstore.EventstoreService/Append", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventstoreServiceClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error) {
	out := new(GetEventsResponse)
	err := c.cc.Invoke(ctx, "/contracts.eventstore.EventstoreService/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventstoreServiceClient) Logs(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (*AppLogResponse, error) {
	out := new(AppLogResponse)
	err := c.cc.Invoke(ctx, "/contracts.eventstore.EventstoreService/Logs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventstoreServiceClient) LogsPoll(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (EventstoreService_LogsPollClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventstoreService_serviceDesc.Streams[0], "/contracts.eventstore.EventstoreService/LogsPoll", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventstoreServiceLogsPollClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventstoreService_LogsPollClient interface {
	Recv() (*AppLogEntry, error)
	grpc.ClientStream
}

type eventstoreServiceLogsPollClient struct {
	grpc.ClientStream
}

func (x *eventstoreServiceLogsPollClient) Recv() (*AppLogEntry, error) {
	m := new(AppLogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventstoreServiceServer is the server API for EventstoreService service.
type EventstoreServiceServer interface {
	Healtz(context.Context, *HealthRequest) (*HealthResponse, error)
	Append(context.Context, *AppendEventRequest) (*AppendEventResponse, error)
	GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error)
	Logs(context.Context, *AppLogRequest) (*AppLogResponse, error)
	LogsPoll(*AppLogRequest, EventstoreService_LogsPollServer) error
}

func RegisterEventstoreServiceServer(s *grpc.Server, srv EventstoreServiceServer) {
	s.RegisterService(&_EventstoreService_serviceDesc, srv)
}

func _EventstoreService_Healtz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventstoreServiceServer).Healtz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.eventstore.EventstoreService/Healtz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventstoreServiceServer).Healtz(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventstoreService_Append_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventstoreServiceServer).Append(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.eventstore.EventstoreService/Append",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventstoreServiceServer).Append(ctx, req.(*AppendEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventstoreService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventstoreServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.eventstore.EventstoreService/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventstoreServiceServer).GetEvents(ctx, req.(*GetEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventstoreService_Logs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventstoreServiceServer).Logs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.eventstore.EventstoreService/Logs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventstoreServiceServer).Logs(ctx, req.(*AppLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventstoreService_LogsPoll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AppLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventstoreServiceServer).LogsPoll(m, &eventstoreServiceLogsPollServer{stream})
}

type EventstoreService_LogsPollServer interface {
	Send(*AppLogEntry) error
	grpc.ServerStream
}

type eventstoreServiceLogsPollServer struct {
	grpc.ServerStream
}

func (x *eventstoreServiceLogsPollServer) Send(m *AppLogEntry) error {
	return x.ServerStream.SendMsg(m)
}

var _EventstoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contracts.eventstore.EventstoreService",
	HandlerType: (*EventstoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Healtz",
			Handler:    _EventstoreService_Healtz_Handler,
		},
		{
			MethodName: "Append",
			Handler:    _EventstoreService_Append_Handler,
		},
		{
			MethodName: "GetEvents",
			Handler:    _EventstoreService_GetEvents_Handler,
		},
		{
			MethodName: "Logs",
			Handler:    _EventstoreService_Logs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LogsPoll",
			Handler:       _EventstoreService_LogsPoll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "eventstore/service.proto",
}
