package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CrudstoreCrudEntitySpec crudstore crud entity spec
// swagger:model crudstoreCrudEntitySpec
type CrudstoreCrudEntitySpec struct {

	// the entity type we're registering like Project, User and etc
	// if have same entity on different bounded contexes can use packages
	// like com.makkalot.User, this field is required
	EntityType string `json:"entity_type,omitempty"`

	// schema spec
	SchemaSpec *CrudstoreSchemaSpec `json:"schema_spec,omitempty"`
}

// Validate validates this crudstore crud entity spec
func (m *CrudstoreCrudEntitySpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSchemaSpec(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CrudstoreCrudEntitySpec) validateSchemaSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.SchemaSpec) { // not required
		return nil
	}

	if m.SchemaSpec != nil {

		if err := m.SchemaSpec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("schema_spec")
			}
			return err
		}
	}

	return nil
}
