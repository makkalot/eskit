{
  "swagger": "2.0",
  "info": {
    "title": "crudstore/service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/healtz": {
      "get": {
        "operationId": "Healtz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/crudstoreHealthResponse"
            }
          }
        },
        "tags": [
          "CrudStoreService"
        ]
      }
    }
  },
  "definitions": {
    "commonOriginator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "crudstoreCreateResponse": {
      "type": "object",
      "properties": {
        "originator": {
          "$ref": "#/definitions/commonOriginator"
        }
      }
    },
    "crudstoreCrudEntitySpec": {
      "type": "object",
      "properties": {
        "entity_type": {
          "type": "string",
          "title": "the entity type we're registering like Project, User and etc\nif have same entity on different bounded contexes can use packages\nlike com.makkalot.User, this field is required"
        },
        "schema_spec": {
          "$ref": "#/definitions/crudstoreSchemaSpec"
        }
      }
    },
    "crudstoreDeleteResponse": {
      "type": "object",
      "properties": {
        "originator": {
          "$ref": "#/definitions/commonOriginator",
          "title": "originator is the id of the object"
        }
      }
    },
    "crudstoreGetResponse": {
      "type": "object",
      "properties": {
        "originator": {
          "$ref": "#/definitions/commonOriginator"
        },
        "payload": {
          "type": "string",
          "title": "json representation of the body"
        }
      }
    },
    "crudstoreGetTypeResponse": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/crudstoreCrudEntitySpec"
        }
      }
    },
    "crudstoreHealthResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "crudstoreListResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/crudstoreListResponseItem"
          }
        },
        "next_page_id": {
          "type": "string"
        }
      }
    },
    "crudstoreListResponseItem": {
      "type": "object",
      "properties": {
        "entity_type": {
          "type": "string"
        },
        "originator": {
          "$ref": "#/definitions/commonOriginator"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "crudstoreListTypesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/crudstoreCrudEntitySpec"
          }
        }
      }
    },
    "crudstoreRegisterTypeResponse": {
      "type": "object"
    },
    "crudstoreSchemaSpec": {
      "type": "object",
      "properties": {
        "schema_version": {
          "type": "string",
          "format": "uint64",
          "title": "optional field that keeps the version of the schema for that object\nfield can be used to make sure the client are sending objects against\nthe latest version of the schema registered in the system"
        },
        "json_schema": {
          "type": "string",
          "title": "optional field that is used for validating the entity for certain\nschema version. If empty no validation is done, if supplied the submitted\nobject is validated against the schema"
        }
      }
    },
    "crudstoreUpdateResponse": {
      "type": "object",
      "properties": {
        "originator": {
          "$ref": "#/definitions/commonOriginator"
        }
      }
    },
    "crudstoreUpdateTypeResponse": {
      "type": "object"
    }
  }
}
