{
  "swagger": "2.0",
  "info": {
    "title": "eventstore/service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/healtz": {
      "get": {
        "operationId": "Healtz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventstoreHealthResponse"
            }
          }
        },
        "tags": [
          "EventstoreService"
        ]
      }
    }
  },
  "definitions": {
    "commonOriginator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "eventstoreAppLogEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id number in the stream"
        },
        "event": {
          "$ref": "#/definitions/eventstoreEvent"
        }
      }
    },
    "eventstoreAppLogResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventstoreAppLogEntry"
          }
        }
      }
    },
    "eventstoreAppendEventResponse": {
      "type": "object"
    },
    "eventstoreEvent": {
      "type": "object",
      "properties": {
        "originator": {
          "$ref": "#/definitions/commonOriginator",
          "title": "The object this event belongs to"
        },
        "event_type": {
          "type": "string",
          "title": "this is the event type that this is related to\nevent type should be in the format of `Entity.Created` so that store can infer the\npartition this event belongs to"
        },
        "payload": {
          "type": "string",
          "title": "the data of the event is inside the payload"
        },
        "occured_on": {
          "type": "string",
          "format": "int64",
          "title": "utc unix timestamp of the event occurence"
        }
      },
      "title": "Event is what you operate on with event store\nIt's the smalled bit that the event store is aware of"
    },
    "eventstoreGetEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventstoreEvent"
          }
        }
      }
    },
    "eventstoreHealthResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
