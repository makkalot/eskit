version: '3'
services:

  gobuild:
    build:
      context: .
      dockerfile: docker/Dockerfile.golang
    volumes:
      - ".:/go/src/github.com/makkalot/eskit"
    working_dir: "/go/src/github.com/makkalot/eskit"
    command: "make build-go"

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=t00r
      - POSTGRES_DB=eventsourcing
    ports:
      - "5432"

  users:
    build:
      dockerfile: "./services/users/Dockerfile"
      context: "."
    ports:
      - "9090"
    environment:
      - CRUDSTORE_ENDPOINT=crudstore:9090

    links:
      - store
      - crudstore
      - consumerapi

  store:
    build:
      dockerfile: "./services/eventstore/Dockerfile"
      context: "."
    ports:
      - "9090"
      - "8888"
    links:
      - db
    environment:
      - DB_URI=host=db port=5432 user=postgres dbname=eventsourcing password=t00r sslmode=disable

  crudstore:
   build:
    dockerfile: "./services/crudstore/Dockerfile"
    context: "."
   ports:
     - "9090"
     - "8888"
   links:
     - db
     - store
   environment:
    - EVENT_STORE_ENDPOINT=store:9090


  consumerapi:
    build:
      dockerfile: "./services/consumerstore/Dockerfile"
      context: "."
    ports:
      - "9090"
      - "8888"
    links:
      - db
    environment:
      - DB_URI=host=db port=5432 user=postgres dbname=eventsourcing sslmode=disable password=t00r

  metrics:
    build:
      dockerfile: "./services/consumers/metrics/Dockerfile"
      context: "."
    environment:
      - CONSUMER_NAME=30892afc-012a-4b4b-9958-e69e5a6279d0
      - CONSUMERSTORE_ENDPOINT=consumerapi:9090
      - EVENT_STORE_ENDPOINT=store:9090
      - CRUDSTORE_ENDPOINT=crudstore:9090
    ports:
      - "8888"
    links:
      - db
      - store
      - crudstore
      - consumerapi

  gotest:
    build:
      context: .
      dockerfile: docker/Dockerfile.golang
    volumes:
      - ".:/go/src/github.com/makkalot/eskit"
    working_dir: "/go/src/github.com/makkalot/eskit"
    command: "make test-go"
    environment:
      - USERS_ENDPOINT=users:9090
      - EVENTSTORE_ENDPOINT=store:9090
      - CONSUMERSTORE_ENDPOINT=consumerapi:9090
      - CRUDSTORE_ENDPOINT=crudstore:9090
    links:
      - db
      - users
      - store
      - crudstore
      - consumerapi


  pytest:
    build:
      dockerfile: "./pyservices/store/Dockerfile"
      context: "."
    environment:
      - EVENTSTORE_ENDPOINT=store:9090
      - CONSUMERSTORE_ENDPOINT=consumerapi:9090
    links:
      - db
      - store
      - crudstore
      - consumerapi
    command: "make test-py"

  pyshell:
    build:
      dockerfile: "./pyservices/store/Dockerfile"
      context: "."
    environment:
      - USERS_ENDPOINT=users:9090
      - EVENTSTORE_ENDPOINT=store:9090
      - CONSUMERSTORE_ENDPOINT=consumerapi:9090
      - CRUDSTORE_ENDPOINT=crudstore:9090
    links:
      - db
      - store
      - crudstore
      - consumerapi
      - users
    command: '/bin/bash -c "trap : TERM INT; sleep infinity & wait"'

  grpcurl:
    build:
      dockerfile: "./docker/Dockerfile.grpcurl"
      context: "."
    environment:
      - USERS_ENDPOINT=users:9090
      - EVENTSTORE_ENDPOINT=store:9090
      - CONSUMERSTORE_ENDPOINT=consumerapi:9090
      - CRUDSTORE_ENDPOINT=crudstore:9090
    links:
      - db
      - store
      - crudstore
      - consumerapi
      - users
    command: '/bin/bash -c "trap : TERM INT; sleep infinity & wait"'

  prom:
    image: prom/prometheus:v2.4.3
    volumes:
     - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
     - 9090
    depends_on:
     - metrics

  grafana:
    image: grafana/grafana
    volumes:
     - ./metrics/grafana/provisioning:/etc/grafana/provisioning
     - ./metrics/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
     - 3000
    depends_on:
      - prom