# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from consumerstore import service_pb2 as consumerstore_dot_service__pb2


class ConsumerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Healtz = channel.unary_unary(
        '/contracts.consumerstore.ConsumerService/Healtz',
        request_serializer=consumerstore_dot_service__pb2.HealthRequest.SerializeToString,
        response_deserializer=consumerstore_dot_service__pb2.HealthResponse.FromString,
        )
    self.LogConsume = channel.unary_unary(
        '/contracts.consumerstore.ConsumerService/LogConsume',
        request_serializer=consumerstore_dot_service__pb2.AppLogConsumeRequest.SerializeToString,
        response_deserializer=consumerstore_dot_service__pb2.AppLogConsumeResponse.FromString,
        )
    self.GetLogConsume = channel.unary_unary(
        '/contracts.consumerstore.ConsumerService/GetLogConsume',
        request_serializer=consumerstore_dot_service__pb2.GetAppLogConsumeRequest.SerializeToString,
        response_deserializer=consumerstore_dot_service__pb2.GetAppLogConsumeResponse.FromString,
        )
    self.List = channel.unary_unary(
        '/contracts.consumerstore.ConsumerService/List',
        request_serializer=consumerstore_dot_service__pb2.ListConsumersRequest.SerializeToString,
        response_deserializer=consumerstore_dot_service__pb2.ListConsumersResponse.FromString,
        )


class ConsumerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Healtz(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogConsume(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLogConsume(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConsumerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Healtz': grpc.unary_unary_rpc_method_handler(
          servicer.Healtz,
          request_deserializer=consumerstore_dot_service__pb2.HealthRequest.FromString,
          response_serializer=consumerstore_dot_service__pb2.HealthResponse.SerializeToString,
      ),
      'LogConsume': grpc.unary_unary_rpc_method_handler(
          servicer.LogConsume,
          request_deserializer=consumerstore_dot_service__pb2.AppLogConsumeRequest.FromString,
          response_serializer=consumerstore_dot_service__pb2.AppLogConsumeResponse.SerializeToString,
      ),
      'GetLogConsume': grpc.unary_unary_rpc_method_handler(
          servicer.GetLogConsume,
          request_deserializer=consumerstore_dot_service__pb2.GetAppLogConsumeRequest.FromString,
          response_serializer=consumerstore_dot_service__pb2.GetAppLogConsumeResponse.SerializeToString,
      ),
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=consumerstore_dot_service__pb2.ListConsumersRequest.FromString,
          response_serializer=consumerstore_dot_service__pb2.ListConsumersResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'contracts.consumerstore.ConsumerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
