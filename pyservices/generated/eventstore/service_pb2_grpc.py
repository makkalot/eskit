# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from eventstore import event_pb2 as eventstore_dot_event__pb2
from eventstore import service_pb2 as eventstore_dot_service__pb2


class EventstoreServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Healtz = channel.unary_unary(
        '/contracts.eventstore.EventstoreService/Healtz',
        request_serializer=eventstore_dot_service__pb2.HealthRequest.SerializeToString,
        response_deserializer=eventstore_dot_service__pb2.HealthResponse.FromString,
        )
    self.Append = channel.unary_unary(
        '/contracts.eventstore.EventstoreService/Append',
        request_serializer=eventstore_dot_service__pb2.AppendEventRequest.SerializeToString,
        response_deserializer=eventstore_dot_service__pb2.AppendEventResponse.FromString,
        )
    self.GetEvents = channel.unary_unary(
        '/contracts.eventstore.EventstoreService/GetEvents',
        request_serializer=eventstore_dot_service__pb2.GetEventsRequest.SerializeToString,
        response_deserializer=eventstore_dot_service__pb2.GetEventsResponse.FromString,
        )
    self.Logs = channel.unary_unary(
        '/contracts.eventstore.EventstoreService/Logs',
        request_serializer=eventstore_dot_service__pb2.AppLogRequest.SerializeToString,
        response_deserializer=eventstore_dot_service__pb2.AppLogResponse.FromString,
        )
    self.LogsPoll = channel.unary_stream(
        '/contracts.eventstore.EventstoreService/LogsPoll',
        request_serializer=eventstore_dot_service__pb2.AppLogRequest.SerializeToString,
        response_deserializer=eventstore_dot_event__pb2.AppLogEntry.FromString,
        )


class EventstoreServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Healtz(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Append(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEvents(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Logs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LogsPoll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EventstoreServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Healtz': grpc.unary_unary_rpc_method_handler(
          servicer.Healtz,
          request_deserializer=eventstore_dot_service__pb2.HealthRequest.FromString,
          response_serializer=eventstore_dot_service__pb2.HealthResponse.SerializeToString,
      ),
      'Append': grpc.unary_unary_rpc_method_handler(
          servicer.Append,
          request_deserializer=eventstore_dot_service__pb2.AppendEventRequest.FromString,
          response_serializer=eventstore_dot_service__pb2.AppendEventResponse.SerializeToString,
      ),
      'GetEvents': grpc.unary_unary_rpc_method_handler(
          servicer.GetEvents,
          request_deserializer=eventstore_dot_service__pb2.GetEventsRequest.FromString,
          response_serializer=eventstore_dot_service__pb2.GetEventsResponse.SerializeToString,
      ),
      'Logs': grpc.unary_unary_rpc_method_handler(
          servicer.Logs,
          request_deserializer=eventstore_dot_service__pb2.AppLogRequest.FromString,
          response_serializer=eventstore_dot_service__pb2.AppLogResponse.SerializeToString,
      ),
      'LogsPoll': grpc.unary_stream_rpc_method_handler(
          servicer.LogsPoll,
          request_deserializer=eventstore_dot_service__pb2.AppLogRequest.FromString,
          response_serializer=eventstore_dot_event__pb2.AppLogEntry.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'contracts.eventstore.EventstoreService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
